#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# PROCESS OPENING/CLOSING PORTS
#=================================================
ynh_script_progression --message="Process opening & closing ports..." --weight=2

# if the port 53 is not open, open it, it's mandatory to use AGH
if ! yunohost firewall list | grep -q " 53$"; then
    ynh_print_info --message="Opening port 53..."
    ynh_exec_warn_less yunohost firewall allow Both 53
fi

if [ "${dns_over_https:-}" = true ]; then
	# if DoH and DoQ are closed
	if ! yunohost firewall list | grep -q " $port_dns_over_tls$" && ! yunohost firewall list | grep -q " $port_dns_over_quic$"; then
		ynh_print_info --message="Opening DoH and DoQ ports..."
		ynh_exec_warn_less yunohost firewall allow Both "$port_dns_over_tls" --no-reload
		ynh_exec_warn_less yunohost firewall allow UDP "$port_dns_over_quic"
	else
		# no need to open the ports, as they were opened at the 'Provisioning ports' step
		ynh_print_info --message="DoH and DoQ ports are open."
	fi
else
    # if dns_over_https is false, we need to close ports,
    # as they were opened at the 'Provisioning ports' step
    ynh_print_info --message="Closing DoH and DoQ ports..."
    ynh_exec_warn_less yunohost firewall disallow Both "$port_dns_over_tls" --no-reload
    ynh_exec_warn_less yunohost firewall disallow UDP "$port_dns_over_quic"
fi

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================

# adding the adguardhome dedicated user to the 'ssl-cert' group to permit the
# use of the Let's Encrypt certs for DOT/DOQ
usermod -a -G ssl-cert "$app"

ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$install_dir"

# we need to refresh IP adresses in case the backup is restored in a different
# environment, else AGH will try to bind port 53 on non-existent IPs and crash

# get the name of the network interface in IPv4 and IPv6
ipv4_interface="$(get_network_interface 4)"
ipv6_interface="$(get_network_interface 6)"

# put the network interface in a dedicated dnsmasq config
configure_network_interface_dnsmasq "$ipv4_interface" "$ipv6_interface"

# get IPv4 for the AGH config file
# the 'sed' is used to get rid of the network prefix ('/24' for example) and the router IP
ipv4_addr=$(process_ips "$(ip -4 address show "$ipv4_interface" 2> /dev/null | grep inet | sed 's&/.*&&')")

# get IPv6 for the AGH config file
# the 'sed' is used to get rid of the network prefix ('/64' for example)
ipv6_addr=$(process_ips "$(ip -6 address show "$ipv6_interface" 2> /dev/null | grep inet | sed 's&/.*&&')")

# update the IP adresses in the AGH config file
update_agh_ip_config


# this will be treated as a security issue.
chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:$app" "$install_dir"

setcap 'CAP_NET_BIND_SERVICE=+eip CAP_NET_RAW=+eip' "$install_dir/AdGuardHome"

systemctl restart dnsmasq

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX web server configuration..." --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable "$app.service" --quiet

# declare needs_exposed_ports according to real user need
if [ "$dns_over_https" == "true" ] && [ "$expose_port_53" == "true" ]; then
    yunohost service add "$app" --description="Ads & trackers blocking DNS server" --needs_exposed_ports "53" "$port_dns_over_tls"
elif [ "$dns_over_https" == "true" ]; then
    yunohost service add "$app" --description="Ads & trackers blocking DNS server" --needs_exposed_ports "$port_dns_over_tls"
elif [ "$expose_port_53" == "true" ]; then
    yunohost service add "$app" --description="Ads & trackers blocking DNS server" --needs_exposed_ports "53"
else
    yunohost service add "$app" --description="Ads & trackers blocking DNS server"
fi

#=================================================
# RESTORE VARIOUS FILES
#=================================================

# restore the kernel config file for DoQ
ynh_restore_file --origin_path="/etc/sysctl.d/10-adguardhome.conf"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name="$app" --action="restart" --log_path="systemd"

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
